-  Define following terms: (i) Big O Notation, (ii) Big Theta Notation, (iii) Big Omega Notation. (S23-3)
-  Perform Bucket sort for following sequence: 30, 12, 22, 66, 48, 27, 35, 43, 47, 41. (S23-4)
-  Explain the bubble sort algorithm and derive its best case, worst case, and average case time complexity. (S23-7)
-  Define Algorithms and characteristics of algorithms. (S23-3)
-  What is a recurrence? Solve recurrence equation for T (n) =T (n-1) + 1 using substitution method. (S23-4)
-  Discuss Binary search algorithm, also write and solve its recurrence relation. (S23-7)
-  Explain Merge Sort algorithm with suitable example. (S23-7)
-  Explain principle of optimality with suitable example. (S23-3)
-  Explain advantages and disadvantages of dynamic programming. (S23-4)
-  Given the denominations: d1=1, d2=4, d3=6. Calculate for making change of Rs. 8 using dynamic programming. (S23-7)
-  Explain Weighted Graph, Undirected Graph, Directed Graph. (S23-3)
-  Discuss advantages and disadvantages of greedy algorithm. (S23-4)
-  Consider weights w=(3,4,6,5) and profit v=(2,3,1,4) and Knapsack capacity W=8. Find the maximum profit using dynamic approach. (S23-7)
-  Find an optimal Huffman code for the following set of frequency. a : 40, b: 20, c: 15, d: 30, e: 10. (S23-3)
-  Explain depth first traversal using suitable example. (S23-4)
-  Draw the minimum spanning tree correspond to following graph using Prim’s algorithm and find the MST weight: (S23-7)
-  Differentiate between Kruskal’s algorithm and Prim’s algorithm for finding MST. (S23-3)
-  Explain the need of topological Sort with example. (S23-4)
-  Draw the minimum spanning tree correspond to following graph using Kruskal’s algorithm and find weight of MST: 07 (a) Explain Spurious hits with an example. (S23-3)
-  Write the pseudocode for Naïve String-Matching Algorithm. (S23-4)
-  What is state space tree. How do you solve the Eight queens problem using backtracking with the help of state space tree. (S23-7)
-  Explain polynomial time reduction. (S23-3)
-  Differentiate between Backtracking and Branch-and-Bound algorithms. (S23-4)
-  Define P, NP, NP complete and NP-Hard problems. Give examples of each (S23-7)


Introduction to Data Structures
5
Arrays Linked_Lists Trees Stacks Queues 

Algorithms and Complexity
4
Sorting Searching Recursion Divide_and_Conquer 

Object-Oriented Programming
6
Classes Objects Inheritance Polymorphism Encapsulation Abstraction 

Database Management Systems
4
SQL RDBMS NoSQL ACID 

Operating Systems
7
Processes Threads Scheduling Memory_Management File Systems I/O_Device_Management 

Computer Networks
5
TCP/IP OSI_Model Routing Switching Network_Security 

